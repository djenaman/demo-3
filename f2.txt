#!/bin/bash
export DEVICEFARM_JUNIT_JAR=/usr/share/java/junit-4.12.jar
export DEVICEFARM_CHROMEDRIVER_EXECUTABLE=/opt/chromedriver/linux/65/chromedriver
export DEVICEFARM_WORKING_DIR=/tmp/working_dirzHPAtB
export DEVICEFARM_DEVICE_NAME=FA7540300696
export DEVICEFARM_SCREENSHOT_PATH=/tmp/scratchkGxr0k.scratch/custom_screenshot7uYtzi
export DEVICEFARM_DEVICE_PLATFORM_NAME=Android
export DEVICEFARM_LOG_DIR=/tmp/customer_log_directory2lPnyR
export DEVICEFARM_TESTNG_JAR=/usr/share/java/testng-6.8.8.jar
export WORKING_DIRECTORY=/tmp/customer_artifacts_working_directoryQI6i1p
export HOME=/home/device-farm
export DEVICEFARM_DEVICE_UDID=FA7540300696
export DEVICEFARM_TEST_PACKAGE_PATH=/tmp/scratchkGxr0k.scratch/test-packageBvUdlU
export DEVICEFARM_APP_PATH=/tmp/scratchkGxr0k.scratch/share-Z0mvYS.scratch/app-EDE2BO.apk
install()
{
echo ' '
echo '[DEVICEFARM] ########### entering phase install ###########'
echo ' '
echo '[DeviceFarm] export APPIUM_VERSION=1.7.2' 
export APPIUM_VERSION=1.7.2 
echo '[DeviceFarm] avm $APPIUM_VERSION' 
avm $APPIUM_VERSION 
echo '[DeviceFarm] ln -s /usr/local/avm/versions/$APPIUM_VERSION/node_modules/.bin/appium  /usr/local/avm/versions/$APPIUM_VERSION/node_modules/appium/bin/appium.js' 
ln -s /usr/local/avm/versions/$APPIUM_VERSION/node_modules/.bin/appium  /usr/local/avm/versions/$APPIUM_VERSION/node_modules/appium/bin/appium.js 
}
pre_test()
{
echo ' '
echo '[DEVICEFARM] ########### entering phase pre_test ###########'
echo ' '
echo '[DeviceFarm] export CLASSPATH=$CLASSPATH:$DEVICEFARM_TESTNG_JAR' 
export CLASSPATH=$CLASSPATH:$DEVICEFARM_TESTNG_JAR 
echo '[DeviceFarm] export CLASSPATH=$CLASSPATH:$DEVICEFARM_TEST_PACKAGE_PATH/*' 
export CLASSPATH=$CLASSPATH:$DEVICEFARM_TEST_PACKAGE_PATH/* 
echo '[DeviceFarm] export CLASSPATH=$CLASSPATH:$DEVICEFARM_TEST_PACKAGE_PATH/dependency-jars/*' 
export CLASSPATH=$CLASSPATH:$DEVICEFARM_TEST_PACKAGE_PATH/dependency-jars/* 
echo '[DeviceFarm] echo "Start appium server"' 
echo "Start appium server" 
echo '[DeviceFarm] adb uninstall com.babylon.sdksample' 
adb uninstall com.babylon.sdksample 
echo '[DeviceFarm] echo $DEVICEFARM_APP_PATH' 
echo $DEVICEFARM_APP_PATH 
echo '[DeviceFarm] adb install $DEVICEFARM_TEST_PACKAGE_PATH/Resources/TestData/app-release.apk' 
adb install $DEVICEFARM_TEST_PACKAGE_PATH/Resources/TestData/app-release.apk 
echo '[DeviceFarm] adb devices' 
adb devices 
echo '[DeviceFarm] appium --log-timestamp --device-name $DEVICEFARM_DEVICE_NAME --platform-name $DEVICEFARM_DEVICE_PLATFORM_NAME --app $DEVICEFARM_APP_PATH --udid $DEVICEFARM_DEVICE_UDID --no-reset --automation-name UiAutomator2 --default-capabilities '{"noSign":true}' >> $DEVICEFARM_LOG_DIR/appiumlog.txt 2>&1 &' 
appium --log-timestamp --device-name $DEVICEFARM_DEVICE_NAME --platform-name $DEVICEFARM_DEVICE_PLATFORM_NAME --app $DEVICEFARM_APP_PATH --udid $DEVICEFARM_DEVICE_UDID --no-reset --automation-name UiAutomator2 --default-capabilities '{"noSign":true}' >> $DEVICEFARM_LOG_DIR/appiumlog.txt 2>&1 & 
echo '[DeviceFarm] start_appium_timeout=0; while [ true ]; do
    if [ $start_appium_timeout -gt 60 ];
    then
        echo "appium server never started in 60 seconds. Exiting";
        exit 1;
    fi;
    grep -i "Appium REST http interface listener started on 0.0.0.0:4723" $DEVICEFARM_LOG_DIR/appiumlog.txt >> /dev/null 2>&1;
    if [ $? -eq 0 ];
    then
        echo "Appium REST http interface listener started on 0.0.0.0:4723";
        break;
    else
        echo "Waiting for appium server to start. Sleeping for 1 second";
        sleep 1;
        start_appium_timeout=$((start_appium_timeout+1));
    fi;
done; ' 
start_appium_timeout=0; while [ true ]; do
    if [ $start_appium_timeout -gt 60 ];
    then
        echo "appium server never started in 60 seconds. Exiting";
        exit 1;
    fi;
    grep -i "Appium REST http interface listener started on 0.0.0.0:4723" $DEVICEFARM_LOG_DIR/appiumlog.txt >> /dev/null 2>&1;
    if [ $? -eq 0 ];
    then
        echo "Appium REST http interface listener started on 0.0.0.0:4723";
        break;
    else
        echo "Waiting for appium server to start. Sleeping for 1 second";
        sleep 1;
        start_appium_timeout=$((start_appium_timeout+1));
    fi;
done;  
}
test()
{
echo ' '
echo '[DEVICEFARM] ########### entering phase test ###########'
echo ' '
echo '[DeviceFarm] echo "Navigate to test package directory"' 
echo "Navigate to test package directory" 
COMMAND_EXIT_CODE=$?
if [ "$COMMAND_EXIT_CODE" != "0" ]; then
return $COMMAND_EXIT_CODE
fi
echo '[DeviceFarm] cd $DEVICEFARM_TEST_PACKAGE_PATH' 
cd $DEVICEFARM_TEST_PACKAGE_PATH 
COMMAND_EXIT_CODE=$?
if [ "$COMMAND_EXIT_CODE" != "0" ]; then
return $COMMAND_EXIT_CODE
fi
echo '[DeviceFarm] echo $DEVICEFARM_TEST_PACKAGE_PATH' 
echo $DEVICEFARM_TEST_PACKAGE_PATH 
COMMAND_EXIT_CODE=$?
if [ "$COMMAND_EXIT_CODE" != "0" ]; then
return $COMMAND_EXIT_CODE
fi
echo '[DeviceFarm] ls' 
ls 
COMMAND_EXIT_CODE=$?
if [ "$COMMAND_EXIT_CODE" != "0" ]; then
return $COMMAND_EXIT_CODE
fi
echo '[DeviceFarm] echo "Start Appium TestNG test"' 
echo "Start Appium TestNG test" 
COMMAND_EXIT_CODE=$?
if [ "$COMMAND_EXIT_CODE" != "0" ]; then
return $COMMAND_EXIT_CODE
fi
echo '[DeviceFarm] java -Dappium.screenshots.dir=$DEVICEFARM_SCREENSHOT_PATH org.testng.TestNG -testjar *-tests.jar -d $DEVICEFARM_LOG_DIR/test-output -verbose 10' 
java -Dappium.screenshots.dir=$DEVICEFARM_SCREENSHOT_PATH org.testng.TestNG -testjar *-tests.jar -d $DEVICEFARM_LOG_DIR/test-output -verbose 10 
COMMAND_EXIT_CODE=$?
if [ "$COMMAND_EXIT_CODE" != "0" ]; then
return $COMMAND_EXIT_CODE
fi
}
post_test()
{
echo ' '
echo '[DEVICEFARM] ########### entering phase post_test ###########'
echo ' '
}
handle_TERM()
{
echo '########### [DEVICEFARM] Stop received, exit testspec execution ###########'
exit 130
}
handle_EXIT()
{
DEVICEFARM_EXIT_CODE=$?
echo '[DEVICEFARM] ########### Finish executing testspec ###########'
echo ' '
echo '[DEVICEFARM] ########### Setting upload permissions ###########'
echo ' '
echo DEVICEFARM_LOG_DIR: $DEVICEFARM_LOG_DIR >> /tmp/artifacts_description.txt 
chmod -R +r $DEVICEFARM_LOG_DIR/*
echo ' '
exit $DEVICEFARM_EXIT_CODE
}
trap 'handle_TERM' 2 15
trap 'handle_EXIT' 0
echo '[DEVICEFARM] ########### Start executing testspec ###########'
echo ' '
install
pre_test
test
TEST_EXIT_CODE=$?
post_test
echo ' '
exit $TEST_EXIT_CODE
